{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\LIM017-burger-queen\\\\burger_queen\\\\src\\\\context\\\\userContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport function UserProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const clients = {\n    name: \"\",\n    table: \"\"\n  };\n  const [order, setOrder] = useState([]);\n  const [client, setClient] = useState(clients); //sumar 1 producto\n\n  const add = id => {\n    const plus = order.map(item => item.id === id ? { ...item,\n      count: item.count + 1\n    } : item);\n    setOrder(plus);\n  }; //Restar 1 producto\n\n\n  const less = id => {\n    const reduce = order.map(item => item.id === id ? { ...item,\n      count: item.count - 1\n    } : item);\n    setOrder(reduce);\n  }; //Eliminar un producto\n\n\n  const remove = dish => {\n    const end = order.filter(item => item.id !== dish);\n    setOrder(end);\n  }; //Calculo de cuentas\n\n\n  const totalPrice = order.map(element => element.price * element.count);\n\n  const reducer = (previousValue, currentValue) => previousValue + currentValue;\n\n  const total = totalPrice.reduce(reducer, 0); //Formato de como se agregara el producto en la \"comanda\"\n\n  const AddProduct = food => {\n    const product = {\n      name: food.name,\n      price: food.price,\n      id: food.id,\n      count: 1\n    }; //si los id son iguales se agrega a la comanda \n\n    if (order.find(item => food.id === item.id)) {\n      add(food.id);\n      return;\n    }\n\n    setOrder([...order, product]);\n  }; //fecha\n\n\n  const orderDate = () => {\n    const today = new Date();\n    const date = `${today.getDate()} - ${today.getMonth() + 1} - ${today.getFullYear()}`;\n    const time = `${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`;\n    const dateTime = ` Fecha: ${date} - Hora: ${time}`;\n    return dateTime;\n  }; //limpiar comanda \n\n\n  const resetOrder = () => {\n    setOrder([]);\n    setClient(clients);\n  }; //guardar la comanda \n\n\n  const saveOrder = async () => {\n    if (!client.name.trim() & !client.table.trim()) {\n      console.log(\"faltan datos \");\n      return;\n    }\n\n    try {\n      const docRef = await addDoc(collection(db, \"commands\"), {\n        Name: client.name,\n        Table: client.table,\n        Total: total,\n        Order: order,\n        Time: orderDate(),\n        Status: \"pendiente\"\n      });\n      resetOrder();\n      return docRef;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      order,\n      setOrder,\n      AddProduct,\n      add,\n      less,\n      remove,\n      total,\n      saveOrder,\n      client,\n      setClient,\n      resetOrder,\n      clients\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 8\n  }, this);\n}\n\n_s(UserProvider, \"3Z3pAgVDIuX0TaMVyb/JeGEhCp8=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","addDoc","collection","db","UserContext","UserProvider","children","clients","name","table","order","setOrder","client","setClient","add","id","plus","map","item","count","less","reduce","remove","dish","end","filter","totalPrice","element","price","reducer","previousValue","currentValue","total","AddProduct","food","product","find","orderDate","today","Date","date","getDate","getMonth","getFullYear","time","getHours","getMinutes","getSeconds","dateTime","resetOrder","saveOrder","trim","console","log","docRef","Name","Table","Total","Order","Time","Status","error"],"sources":["C:/Users/USER/Desktop/LIM017-burger-queen/burger_queen/src/context/userContext.js"],"sourcesContent":["import {createContext, useState} from \"react\"\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/firebase\";\r\n\r\n\r\n\r\nexport const UserContext = createContext();\r\n\r\n\r\nexport function UserProvider ({children }) {\r\n\r\n    const clients = {\r\n        name:\"\",\r\n        table:\"\"\r\n    }\r\n     const [order, setOrder] = useState([]);\r\n     \r\n     \r\n     const [client, setClient] = useState(clients);\r\n     \r\n    \r\n    \r\n    //sumar 1 producto\r\n    const add = (id) => {\r\n        const plus = order.map(item => item.id === id ? {...item, count: item.count +1} : item) \r\n        setOrder(plus)\r\n    };\r\n    //Restar 1 producto\r\n    const less = (id) => {\r\n        const reduce = order.map(item => item.id === id ? {...item, count: item.count -1} : item)\r\n        setOrder(reduce)\r\n    };\r\n    //Eliminar un producto\r\n    const remove = (dish) => {\r\n        const end = order.filter(item => item.id !== dish)\r\n        setOrder(end)\r\n    };\r\n    //Calculo de cuentas\r\n    const totalPrice = order.map(element => (element.price * element.count))\r\n    const reducer = (previousValue, currentValue) => previousValue + currentValue;\r\n    const total = totalPrice.reduce(reducer, 0)\r\n    //Formato de como se agregara el producto en la \"comanda\"\r\n    const AddProduct = (food) =>{\r\n        const product = {\r\n            name:food.name,\r\n            price:food.price,\r\n            id:food.id,\r\n            count:1\r\n     \r\n       }\r\n       //si los id son iguales se agrega a la comanda \r\n       if(order.find(item => food.id === item.id)) {\r\n        add(food.id)\r\n        return\r\n    }\r\n        setOrder([...order, product])\r\n     \r\n    }\r\n    //fecha\r\n    const orderDate = () => {\r\n        const today = new Date ();\r\n        const date = `${today.getDate()} - ${(today.getMonth() + 1)} - ${today.getFullYear()}`;\r\n        const time = `${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`;\r\n        const dateTime = ` Fecha: ${date} - Hora: ${time}`;\r\n        return dateTime;\r\n    };\r\n    //limpiar comanda \r\n    const resetOrder = () =>{\r\n        setOrder([])\r\n        setClient(clients)\r\n       \r\n        \r\n    }\r\n\r\n     //guardar la comanda \r\n     const saveOrder = async() => {\r\n       if(!client.name.trim() & !client.table.trim()){\r\n           console.log(\"faltan datos \")\r\n           return;\r\n       }\r\n         try{\r\n            const docRef = await addDoc(collection(db, \"commands\"),{\r\n                Name:client.name,\r\n                Table: client.table,\r\n                Total: total,\r\n                Order: order,\r\n                Time: orderDate(),\r\n               Status: \"pendiente\",\r\n\r\n            });\r\n            \r\n            resetOrder()\r\n            return docRef\r\n            \r\n         } catch (error){\r\n             console.log(error)\r\n\r\n         }\r\n            \r\n     };\r\n     \r\n\r\n    \r\n   return (\r\n       <UserContext.Provider value={{order, setOrder, AddProduct, add, less, remove, total, saveOrder, client, setClient, resetOrder, clients}}>\r\n           {children}\r\n       </UserContext.Provider>\r\n   )\r\n\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}