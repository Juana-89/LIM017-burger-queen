{"ast":null,"code":"import baseDeDatos from '../../data/menu.json';\nlet carrito = [];\nconst divisa = '€';\nconst DOMitems = document.querySelector('#items');\nconst DOMcarrito = document.querySelector('#carrito');\nconst DOMtotal = document.querySelector('#total');\nconst DOMbotonVaciar = document.querySelector('#boton-vaciar'); // Funciones\n\n/**\r\n * Dibuja todos los productos a partir de la base de datos. No confundir con el carrito\r\n */\n\nexport function Prueba() {\n  function renderizarProductos() {\n    console.log(baseDeDatos);\n    baseDeDatos.forEach(info => {\n      // Estructura\n      const miNodo = document.createElement('div');\n      miNodo.classList.add('card', 'col-sm-4'); // Body\n\n      const miNodoCardBody = document.createElement('div');\n      miNodoCardBody.classList.add('card-body'); // Titulo\n\n      const miNodoTitle = document.createElement('h5');\n      miNodoTitle.classList.add('card-title');\n      miNodoTitle.textContent = info.nombre; // Imagen\n\n      const miNodoImagen = document.createElement('img');\n      miNodoImagen.classList.add('img-fluid');\n      miNodoImagen.setAttribute('src', info.imagen); // Precio\n\n      const miNodoPrecio = document.createElement('p');\n      miNodoPrecio.classList.add('card-text');\n      miNodoPrecio.textContent = `${info.precio}${divisa}`; // Boton \n\n      const miNodoBoton = document.createElement('button');\n      miNodoBoton.classList.add('btn', 'btn-primary');\n      miNodoBoton.textContent = '+';\n      miNodoBoton.setAttribute('marcador', info.id);\n      miNodoBoton.addEventListener('click', anyadirProductoAlCarrito); // Insertamos\n\n      miNodoCardBody.appendChild(miNodoImagen);\n      miNodoCardBody.appendChild(miNodoTitle);\n      miNodoCardBody.appendChild(miNodoPrecio);\n      miNodoCardBody.appendChild(miNodoBoton);\n      miNodo.appendChild(miNodoCardBody);\n      DOMitems.appendChild(miNodo);\n    });\n  }\n  /**\r\n   * Evento para añadir un producto al carrito de la compra\r\n   */\n\n\n  function anyadirProductoAlCarrito(evento) {\n    // Anyadimos el Nodo a nuestro carrito\n    carrito.push(evento.target.getAttribute('marcador')); // Actualizamos el carrito \n\n    renderizarCarrito();\n  }\n  /**\r\n   * Dibuja todos los productos guardados en el carrito\r\n   */\n\n\n  function renderizarCarrito() {\n    // Vaciamos todo el html\n    DOMcarrito.textContent = ''; // Quitamos los duplicados\n\n    const carritoSinDuplicados = [...new Set(carrito)]; // Generamos los Nodos a partir de carrito\n\n    carritoSinDuplicados.forEach(item => {\n      // Obtenemos el item que necesitamos de la variable base de datos\n      const miItem = baseDeDatos.filter(itemBaseDatos => {\n        // ¿Coincide las id? Solo puede existir un caso\n        return itemBaseDatos.id === parseInt(item);\n      }); // Cuenta el número de veces que se repite el producto\n\n      const numeroUnidadesItem = carrito.reduce((total, itemId) => {\n        // ¿Coincide las id? Incremento el contador, en caso contrario no mantengo\n        return itemId === item ? total += 1 : total;\n      }, 0); // Creamos el nodo del item del carrito\n\n      const miNodo = document.createElement('li');\n      miNodo.classList.add('list-group-item', 'text-right', 'mx-2');\n      miNodo.textContent = `${numeroUnidadesItem} x ${miItem[0].nombre} - ${miItem[0].precio}${divisa}`; // Boton de borrar\n\n      const miBoton = document.createElement('button');\n      miBoton.classList.add('btn', 'btn-danger', 'mx-5');\n      miBoton.textContent = 'X';\n      miBoton.style.marginLeft = '1rem';\n      miBoton.dataset.item = item;\n      miBoton.addEventListener('click', borrarItemCarrito); // Mezclamos nodos\n\n      miNodo.appendChild(miBoton);\n      DOMcarrito.appendChild(miNodo);\n    }); // Renderizamos el precio total en el HTML\n\n    DOMtotal.textContent = calcularTotal();\n  }\n  /**\r\n   * Evento para borrar un elemento del carrito\r\n   */\n\n\n  function borrarItemCarrito(evento) {\n    // Obtenemos el producto ID que hay en el boton pulsado\n    const id = evento.target.dataset.item; // Borramos todos los productos\n\n    carrito = carrito.filter(carritoId => {\n      return carritoId !== id;\n    }); // volvemos a renderizar\n\n    renderizarCarrito();\n  }\n  /**\r\n   * Calcula el precio total teniendo en cuenta los productos repetidos\r\n   */\n\n\n  function calcularTotal() {\n    // Recorremos el array del carrito \n    return carrito.reduce((total, item) => {\n      // De cada elemento obtenemos su precio\n      const miItem = baseDeDatos.filter(itemBaseDatos => {\n        return itemBaseDatos.id === parseInt(item);\n      }); // Los sumamos al total\n\n      return total + miItem[0].precio;\n    }, 0).toFixed(2);\n  }\n  /**\r\n   * Varia el carrito y vuelve a dibujarlo\r\n   */\n\n\n  function vaciarCarrito() {\n    // Limpiamos los productos guardados\n    carrito = []; // Renderizamos los cambios\n\n    renderizarCarrito();\n  } // Eventos\n\n\n  DOMbotonVaciar.addEventListener('click', vaciarCarrito); // Inicio\n\n  renderizarProductos();\n  renderizarCarrito();\n}\n_c = Prueba;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prueba\");","map":{"version":3,"names":["baseDeDatos","carrito","divisa","DOMitems","document","querySelector","DOMcarrito","DOMtotal","DOMbotonVaciar","Prueba","renderizarProductos","console","log","forEach","info","miNodo","createElement","classList","add","miNodoCardBody","miNodoTitle","textContent","nombre","miNodoImagen","setAttribute","imagen","miNodoPrecio","precio","miNodoBoton","id","addEventListener","anyadirProductoAlCarrito","appendChild","evento","push","target","getAttribute","renderizarCarrito","carritoSinDuplicados","Set","item","miItem","filter","itemBaseDatos","parseInt","numeroUnidadesItem","reduce","total","itemId","miBoton","style","marginLeft","dataset","borrarItemCarrito","calcularTotal","carritoId","toFixed","vaciarCarrito"],"sources":["C:/Users/USER/Desktop/LIM017-burger-queen/burger_queen/src/components/prueba/a.js"],"sourcesContent":["import baseDeDatos from '../../data/menu.json';\r\nlet carrito = [];\r\nconst divisa = '€';\r\nconst DOMitems = document.querySelector('#items');\r\nconst DOMcarrito = document.querySelector('#carrito');\r\nconst DOMtotal = document.querySelector('#total');\r\nconst DOMbotonVaciar = document.querySelector('#boton-vaciar');\r\n\r\n// Funciones\r\n\r\n/**\r\n * Dibuja todos los productos a partir de la base de datos. No confundir con el carrito\r\n */\r\n export function Prueba (){\r\n  function renderizarProductos() {\r\n    console.log(baseDeDatos)\r\n    baseDeDatos.forEach((info) => {\r\n        // Estructura\r\n        const miNodo = document.createElement('div');\r\n        miNodo.classList.add('card', 'col-sm-4');\r\n        // Body\r\n        const miNodoCardBody = document.createElement('div');\r\n        miNodoCardBody.classList.add('card-body');\r\n        // Titulo\r\n        const miNodoTitle = document.createElement('h5');\r\n        miNodoTitle.classList.add('card-title');\r\n        miNodoTitle.textContent = info.nombre;\r\n        // Imagen\r\n        const miNodoImagen = document.createElement('img');\r\n        miNodoImagen.classList.add('img-fluid');\r\n        miNodoImagen.setAttribute('src', info.imagen);\r\n        // Precio\r\n        const miNodoPrecio = document.createElement('p');\r\n        miNodoPrecio.classList.add('card-text');\r\n        miNodoPrecio.textContent = `${info.precio}${divisa}`;\r\n        // Boton \r\n        const miNodoBoton = document.createElement('button');\r\n        miNodoBoton.classList.add('btn', 'btn-primary');\r\n        miNodoBoton.textContent = '+';\r\n        miNodoBoton.setAttribute('marcador', info.id);\r\n        miNodoBoton.addEventListener('click', anyadirProductoAlCarrito);\r\n        // Insertamos\r\n        miNodoCardBody.appendChild(miNodoImagen);\r\n        miNodoCardBody.appendChild(miNodoTitle);\r\n        miNodoCardBody.appendChild(miNodoPrecio);\r\n        miNodoCardBody.appendChild(miNodoBoton);\r\n        miNodo.appendChild(miNodoCardBody);\r\n        DOMitems.appendChild(miNodo);\r\n    });\r\n}\r\n\r\n/**\r\n * Evento para añadir un producto al carrito de la compra\r\n */\r\nfunction anyadirProductoAlCarrito(evento) {\r\n    // Anyadimos el Nodo a nuestro carrito\r\n    carrito.push(evento.target.getAttribute('marcador'))\r\n    // Actualizamos el carrito \r\n    renderizarCarrito();\r\n\r\n}\r\n\r\n/**\r\n * Dibuja todos los productos guardados en el carrito\r\n */\r\nfunction renderizarCarrito() {\r\n    // Vaciamos todo el html\r\n    DOMcarrito.textContent = '';\r\n    // Quitamos los duplicados\r\n    const carritoSinDuplicados = [...new Set(carrito)];\r\n    // Generamos los Nodos a partir de carrito\r\n    carritoSinDuplicados.forEach((item) => {\r\n        // Obtenemos el item que necesitamos de la variable base de datos\r\n        const miItem = baseDeDatos.filter((itemBaseDatos) => {\r\n            // ¿Coincide las id? Solo puede existir un caso\r\n            return itemBaseDatos.id === parseInt(item);\r\n        });\r\n        // Cuenta el número de veces que se repite el producto\r\n        const numeroUnidadesItem = carrito.reduce((total, itemId) => {\r\n            // ¿Coincide las id? Incremento el contador, en caso contrario no mantengo\r\n            return itemId === item ? total += 1 : total;\r\n        }, 0);\r\n        // Creamos el nodo del item del carrito\r\n        const miNodo = document.createElement('li');\r\n        miNodo.classList.add('list-group-item', 'text-right', 'mx-2');\r\n        miNodo.textContent = `${numeroUnidadesItem} x ${miItem[0].nombre} - ${miItem[0].precio}${divisa}`;\r\n        // Boton de borrar\r\n        const miBoton = document.createElement('button');\r\n        miBoton.classList.add('btn', 'btn-danger', 'mx-5');\r\n        miBoton.textContent = 'X';\r\n        miBoton.style.marginLeft = '1rem';\r\n        miBoton.dataset.item = item;\r\n        miBoton.addEventListener('click', borrarItemCarrito);\r\n        // Mezclamos nodos\r\n        miNodo.appendChild(miBoton);\r\n        DOMcarrito.appendChild(miNodo);\r\n    });\r\n    // Renderizamos el precio total en el HTML\r\n    DOMtotal.textContent = calcularTotal();\r\n}\r\n\r\n/**\r\n * Evento para borrar un elemento del carrito\r\n */\r\nfunction borrarItemCarrito(evento) {\r\n    // Obtenemos el producto ID que hay en el boton pulsado\r\n    const id = evento.target.dataset.item;\r\n    // Borramos todos los productos\r\n    carrito = carrito.filter((carritoId) => {\r\n        return carritoId !== id;\r\n    });\r\n    // volvemos a renderizar\r\n    renderizarCarrito();\r\n}\r\n\r\n/**\r\n * Calcula el precio total teniendo en cuenta los productos repetidos\r\n */\r\nfunction calcularTotal() {\r\n    // Recorremos el array del carrito \r\n    return carrito.reduce((total, item) => {\r\n        // De cada elemento obtenemos su precio\r\n        const miItem = baseDeDatos.filter((itemBaseDatos) => {\r\n            return itemBaseDatos.id === parseInt(item);\r\n        });\r\n        // Los sumamos al total\r\n        return total + miItem[0].precio;\r\n    }, 0).toFixed(2);\r\n}\r\n\r\n/**\r\n * Varia el carrito y vuelve a dibujarlo\r\n */\r\nfunction vaciarCarrito() {\r\n    // Limpiamos los productos guardados\r\n    carrito = [];\r\n    // Renderizamos los cambios\r\n    renderizarCarrito();\r\n}\r\n\r\n// Eventos\r\nDOMbotonVaciar.addEventListener('click', vaciarCarrito);\r\n\r\n// Inicio\r\nrenderizarProductos();\r\nrenderizarCarrito();\r\n }"],"mappings":"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"},"metadata":{},"sourceType":"module"}